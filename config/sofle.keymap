#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3


/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    / {
    macros {
        M_UNDO: M_UNDO {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp Z>
                , <&macro_release &kp LGUI>
                ;
        };
        M_CUT: M_CUT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp X>
                , <&macro_release &kp LGUI>
                ;
        };
        M_COPY: M_COPY {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp C>
                , <&macro_release &kp LGUI>
                ;
        };
        M_PASTE: M_PASTE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp V>
                , <&macro_release &kp LGUI>
                ;
        };
    };
};

/ {

    
   // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  -    |
// |   `   |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  SHIFT  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | CTRL |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  | PLAY_PAUSE |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | CTRL | ALT  | GUI | LOWER|  SPACE |  | ENTER | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4  &kp N5               &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9           &kp N0      &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R   &kp T                &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O            &kp P       &kp BSLH
&kp LSHFT   &kp A      &kp S         &kp D         &kp F   &kp G                &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L            &kp SEMI    &kp SQT
&kp LCTRL   &kp Z      &kp X         &kp C         &kp V   &kp B                &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT          &kp FSLH    &kp RSHFT
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo LOWER &kp SPACE            &kp ENTER        &mo RAISE  &kp ENTER  &kp EQUAL   &kp TILDE  &kp MINUS
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        lower_layer {
            display-name = "lower";
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |  CLCK |  =  |  -  |  +   |  {   |  }   |        |  | MOUSE |  [   |  ]    |  ;    |  :   |   \   | CLCK  |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans      &kp F1           &kp F2          &kp F3           &kp F4           &kp F5                  &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &kp F11
&kp GRAVE   &kp N1        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4                &mmv MOVE_DOWN      &kp N6           &kp N7           &kp N8      &kp N9     &kp N0            &kp F12
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5                &mmv MOVE_LEFT   &kp CARET        &kp AMPS         &kp KP_MULTIPLY   &kp LPAR  &kp RPAR     &kp PIPE
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI         &mmv MOVE_RIGHT  &kp LBKT         &kp RBKT &kp SEMI        &kp COLON      &kp BSLH            &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans                  &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "raise";
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |  DEL  |
// |       | INS  | PSCR | GUI   |       |      |                | PGUP |PGDWN |       |      |       | BKSPC |
// |       | ALT  | CTRL | SHIFT |       | CAPS |                | <-   |   v  |   ^   |  ->  |  DEL  | BKSPC |
// |  CLCK | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       | CLCK  |
//                |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4               &mmv MOVE_UP     &trans    &trans    &trans   &trans    &trans  &kp DEL
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans                     &mmv MOVE_DOWN   &kp PG_UP &kp PG_DN &trans   &trans    &trans  &kp BSPC
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &kp CLCK                   &mmv MOVE_LEFT   &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT &kp DEL &kp BSPC
&trans     &M_UNDO       &M_CUT          &M_COPY       &M_PASTE      &trans                     &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans                     &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};

        adjust_layer {
            display-name = "adjust";
// ----------------------------------------------------------------------------------------------------------------------------
// | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
// | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
// |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
// |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
//                    |         |         |         |         |         | |      |      |      |       |      |
            bindings = <
&bt BT_CLR        &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4              &mmv MOVE_UP     &none &none &none &none &none &none
&ext_power EP_TOG &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF           &mmv MOVE_DOWN   &none &none &none &none &none &none
&none             &rgb_ug RGB_BRD &rgb_ug RGB_BRI &none           &none           &none                     &mmv MOVE_LEFT   &none &none &none &none &none &none
&trans     &sys_reset    &trans          &bootloader   &trans        &trans                                 &mmv MOVE_RIGHT  &none &none &none &none &none &none
&trans     &trans        &trans          &trans        &trans        &trans                                 &mkp LCLK        &none &none &none &none &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
